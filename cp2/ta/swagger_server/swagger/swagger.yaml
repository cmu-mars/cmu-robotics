---
swagger: "2.0"
info:
  version: "0.1"
  title: "CMU MARS BRASS TA: Phase II, CP2"
host: "brass-ta"
schemes:
- "http"
paths:
  /perturbations:
    get:
      description: "Returns a list of possible perturbations of an (optionally) specified\
        \ shape and complexity that can be performed at a given line in the program.\
        \ This endpoint should be used to select a suitable (set of) perturbation(s)\
        \ for a test scenario."
      operationId: "perturbations_get"
      parameters:
      - in: "body"
        name: "perturbation_params"
        required: true
        schema:
          $ref: "#/definitions/perturbation_params"
      responses:
        200:
          description: "OK."
          schema:
            $ref: "#/definitions/inline_response_200"
        400:
          description: "Encountered an error while computing the list of possible\
            \ perturbations."
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /lines:
    get:
      description: "Returns a list of all the source lines at which perturbations\
        \ may be injected."
      operationId: "lines_get"
      parameters: []
      responses:
        200:
          description: "OK."
          schema:
            type: "array"
            description: "A list of the mutable source lines within the project."
            items:
              $ref: "#/definitions/SourceLine"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /files:
    get:
      description: "Returns a list of all the source files that may be subject to\
        \ perturbation."
      operationId: "files_get"
      parameters: []
      responses:
        200:
          description: "OK."
          schema:
            type: "array"
            description: "A list of the mutable files."
            items:
              type: "string"
              example: "foo.cpp"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /observe:
    get:
      description: "Returns the current status of the SUT."
      operationId: "observe_get"
      parameters: []
      responses:
        200:
          description: "OK."
          schema:
            $ref: "#/definitions/inline_response_200_1"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /perturb:
    post:
      description: "Applies a given perturbation to the SUT. The resulting perturbed\
        \ system will become Baseline B, provided that the system builds and fails\
        \ at least one test."
      operationId: "perturb_post"
      parameters:
      - in: "body"
        name: "perturb_params"
        required: true
        schema:
          $ref: "#/definitions/Perturbation"
      responses:
        204:
          description: "OK."
        400:
          description: "Failed to perturb the SUT."
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "The SUT has already been perturbed."
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /adapt:
    post:
      description: "Triggers the code adaptation process."
      operationId: "adapt_post"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "Parameters"
        required: true
        schema:
          $ref: "#/definitions/Parameters"
      responses:
        204:
          description: "OK."
        400:
          description: "An error prevented code adaptation from being triggered."
          schema:
            $ref: "#/definitions/Error"
        409:
          description: "System has not been (successfully) perturbed or adaptation\
            \ has already been triggered."
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
definitions:
  PerturbationKind:
    type: "string"
    description: "A description of the kind of the perturbation."
    enum:
    - "delete-void-function-call"
    - "flip-arithmetic-operator"
    - "flip-boolean-operator"
    - "flip-relational-operator"
    - "undo-transformation"
    - "delete-conditional-control-flow"
    - "flip-signedness"
  Perturbation:
    type: "object"
    required:
    - "at"
    - "kind"
    properties:
      kind:
        $ref: "#/definitions/PerturbationKind"
      at:
        description: "The range of code that is deleted or replaced by the perturbation."
        $ref: "#/definitions/SourceRange"
      replacement:
        type: "string"
        description: "The body of the source code that should replaced the source\
          \ code given by the location range associated with this perturbation."
  SourceRange:
    type: "object"
    required:
    - "start"
    - "stop"
    properties:
      start:
        description: "The location that marks the start of this source range."
        $ref: "#/definitions/SourceLocation"
      stop:
        description: "The location that marks the end of this source range."
        $ref: "#/definitions/SourceLocation"
    example:
      stop:
        file: "file"
        line: 12
        column: 6
      start:
        file: "file"
        line: 12
        column: 6
  SourceLocation:
    type: object
    required:
      - file
      - line
      - column
    properties:
      file:
        type: string
        description: >-
          The file at which this source location resides.
      line:
        type: integer
        minimum: 1
        description: >-
          The one-indexed line number of this location.
      column:
        type: integer
        minimum: 1
        description: >-
          The one-indexed column number of this location.
    example:
      file: "file"
      line: 12
      column: 6
  Error:
    type: "object"
    required:
    - "error"
    properties:
      error:
        $ref: "#/definitions/Error_error"
  SourceLine:
    type: "object"
    required:
    - "file"
    - "number"
    properties:
      file:
        type: "string"
        description: "The file to which this line belongs."
      number:
        type: "integer"
        description: "The one-indexed number of this line in the file."
        minimum: 1
    example:
      number: 1
      file: "file"
  CandidateAdaptation:
    type: "object"
    required:
    - "compilation-outcome"
    - "diff"
    - "test-outcomes"
    properties:
      diff:
        type: "string"
        description: "A description of the change to the code, given in the form of\
          \ a diff."
      compilation-outcome:
        description: "A description of the outcome of attempting to compile this adaptation."
        $ref: "#/definitions/CompilationOutcome"
      test-outcomes:
        type: "array"
        description: "A summary of the outcomes for each of the test cases that this\
          \ adaptation was evaluated against."
        items:
          $ref: "#/definitions/TestOutcome"
    example:
      compilation-outcome:
        time-taken: 0.14658129
        successful: true
      test-outcomes:
      - test-id: "test-id"
        passed: true
        time-taken: 0.5962134
      - test-id: "test-id"
        passed: true
        time-taken: 0.5962134
      diff: "diff"
  CompilationOutcome:
    type: "object"
    required:
    - "successful"
    - "time-taken"
    properties:
      time-taken:
        type: "number"
        format: "float"
        description: "The number of seconds taken to compile this adaptation."
        minimum: 0
      successful:
        type: "boolean"
        description: "A flag indicating whether the compilation of this adaptation\
          \ was successful or not."
    example:
      time-taken: 0.14658129
      successful: true
  TestOutcome:
    type: "object"
    required:
    - "passed"
    - "test-id"
    - "time-taken"
    properties:
      test-id:
        type: "string"
        description: "A unique identifier for the test to which this outcome belongs."
      time-taken:
        type: "number"
        format: "float"
        description: "The number of seconds taken to complete the test."
        minimum: 0
      passed:
        type: "boolean"
        description: "Indicates whether or not the test passed."
    example:
      test-id: "test-id"
      passed: true
      time-taken: 0.5962134
  perturbation_params:
    type: "object"
    required:
    - "file"
    - "shape"
    properties:
      file:
        type: "string"
        description: "The file at which the perturbation should be injected."
      shape:
        $ref: "#/definitions/PerturbationKind"
      line:
        type: "integer"
        description: "The number of the line at which the perturbation should be injected."
  inline_response_200:
    properties:
      perturbations:
        type: "array"
        description: "A list of perturbations that satisfy the query parameters provided\
          \ by the request."
        items:
          $ref: "#/definitions/Perturbation"
    example:
      perturbations:
      - at:
          stop:
            file: "file"
            offset: 0
          start:
            file: "file"
            offset: 0
        kind: {}
        replacement: "replacement"
      - at:
          stop:
            file: "file"
            offset: 0
          start:
            file: "file"
            offset: 0
        kind: {}
        replacement: "replacement"
  inline_response_200_1_resourceconsumption:
    required:
    - "num-attempts"
    properties:
      num-attempts:
        type: "integer"
        description: "Number of attempted adaptations."
        minimum: 0
      time-spent:
        type: "number"
        format: "float"
        description: "Wall-clock time spent searching for an adaptation."
        minimum: 0.0
    description: "A description of the resources that have been consumed in the process\
      \ of searching for an adaptation."
    example:
      num-attempts: 0
      time-spent: 0.6027456
  inline_response_200_1:
    required:
    - "stage"
    properties:
      stage:
        type: "string"
        description: "A concise description of the current state of the system."
        enum:
        - "READY_TO_PERTURB"
        - "PERTURBING"
        - "READY_TO_ADAPT"
        - "SEARCHING"
        - "FINISHED"
      resource-consumption:
        $ref: "#/definitions/inline_response_200_1_resourceconsumption"
      pareto-set:
        type: "array"
        description: "A list containing details of the sub-set of adaptations that\
          \ have been encountered that belong to the pareto set (i.e., the set of\
          \ non-dominated adaptations)."
        items:
          $ref: "#/definitions/CandidateAdaptation"
    example:
      resource-consumption:
        num-attempts: 0
        time-spent: 0.6027456
      stage: "READY_TO_PERTURB"
      pareto-set:
      - compilation-outcome:
          time-taken: 0.14658129
          successful: true
        test-outcomes:
        - test-id: "test-id"
          passed: true
          time-taken: 0.5962134
        - test-id: "test-id"
          passed: true
          time-taken: 0.5962134
        diff: "diff"
      - compilation-outcome:
          time-taken: 0.14658129
          successful: true
        test-outcomes:
        - test-id: "test-id"
          passed: true
          time-taken: 0.5962134
        - test-id: "test-id"
          passed: true
          time-taken: 0.5962134
        diff: "diff"
  Parameters:
    type: "object"
    properties:
      time-limit:
        type: "number"
        format: "float"
        description: "An (optional) time limit for the adaptation process, specified\
          \ in minutes."
        minimum: 1.0
      attempt-limit:
        type: "integer"
        description: "An (optional) limit on the number of adaptations that may be\
          \ attempted."
        minimum: 1
    example:
      time-limit: 1.0800828
      attempt-limit: 1
  Error_error:
    required:
    - "kind"
    - "message"
    properties:
      kind:
        type: "string"
        example: "NeutralPerturbation"
        description: "The kind of error that occurred."
        enum:
        - "NeutralPerturbation"
        - "FailedToComputeCoverage"
        - "NotReadyToPerturb"
        - "NotReadyToAdapt"
        - "FileNotFound"
        - "LineNotFound"
        - "OperatorNotFound"
        - "NoSearchLimits"
      message:
        type: "string"
        example: "invalid perturbation: no test failures."
        description: "Human-readable information about the error, if any can be provided."
