# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Parameters2(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, id: str=None):
        """
        Parameters2 - a model defined in Swagger

        :param id: The id of this Parameters2.
        :type id: str
        """
        self.swagger_types = {
            'id': str
        }

        self.attribute_map = {
            'id': 'id'
        }

        self._id = id

    @classmethod
    def from_dict(cls, dikt) -> 'Parameters2':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Parameters_2 of this Parameters2.
        :rtype: Parameters2
        """
        return deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """
        Gets the id of this Parameters2.
        cause the named node to fail

        :return: The id of this Parameters2.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """
        Sets the id of this Parameters2.
        cause the named node to fail

        :param id: The id of this Parameters2.
        :type id: str
        """
        allowed_values = ["movebase", "amcl", "mrpt", "cb-base"]
        if id not in allowed_values:
            raise ValueError(
                "Invalid value for `id` ({0}), must be one of {1}"
                .format(id, allowed_values)
            )

        self._id = id

