# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class RemoveParams(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, obstacleid: str=None):  # noqa: E501
        """RemoveParams - a model defined in Swagger

        :param obstacleid: The obstacleid of this RemoveParams.  # noqa: E501
        :type obstacleid: str
        """
        self.swagger_types = {
            'obstacleid': str
        }

        self.attribute_map = {
            'obstacleid': 'obstacleid'
        }

        self._obstacleid = obstacleid

    @classmethod
    def from_dict(cls, dikt) -> 'RemoveParams':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RemoveParams of this RemoveParams.  # noqa: E501
        :rtype: RemoveParams
        """
        return util.deserialize_model(dikt, cls)

    @property
    def obstacleid(self) -> str:
        """Gets the obstacleid of this RemoveParams.

        the obstacle ID given by /perturb/place-obstacle of the obstacle to be removed.  # noqa: E501

        :return: The obstacleid of this RemoveParams.
        :rtype: str
        """
        return self._obstacleid

    @obstacleid.setter
    def obstacleid(self, obstacleid: str):
        """Sets the obstacleid of this RemoveParams.

        the obstacle ID given by /perturb/place-obstacle of the obstacle to be removed.  # noqa: E501

        :param obstacleid: The obstacleid of this RemoveParams.
        :type obstacleid: str
        """
        if obstacleid is None:
            raise ValueError("Invalid value for `obstacleid`, must not be `None`")  # noqa: E501

        self._obstacleid = obstacleid
