# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Parameters0(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, x: float=None, y: float=None):
        """
        Parameters - a model defined in Swagger

        :param x: The x of this Parameters.
        :type x: float
        :param y: The y of this Parameters.
        :type y: float
        """
        self.swagger_types = {
            'x': float,
            'y': float
        }

        self.attribute_map = {
            'x': 'x',
            'y': 'y'
        }

        self._x = x
        self._y = y

    @classmethod
    def from_dict(cls, dikt) -> 'Parameters':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Parameters of this Parameters.
        :rtype: Parameters
        """
        return deserialize_model(dikt, cls)

    @property
    def x(self) -> float:
        """
        Gets the x of this Parameters.
        the x-coordinate of the center of the obstacle placement position

        :return: The x of this Parameters.
        :rtype: float
        """
        return self._x

    @x.setter
    def x(self, x: float):
        """
        Sets the x of this Parameters.
        the x-coordinate of the center of the obstacle placement position

        :param x: The x of this Parameters.
        :type x: float
        """
        if x is None:
            raise ValueError("Invalid value for `x`, must not be `None`")

        self._x = x

    @property
    def y(self) -> float:
        """
        Gets the y of this Parameters.
        the y-coordinate of the center of the obstacle placement position

        :return: The y of this Parameters.
        :rtype: float
        """
        return self._y

    @y.setter
    def y(self, y: float):
        """
        Sets the y of this Parameters.
        the y-coordinate of the center of the obstacle placement position

        :param y: The y of this Parameters.
        :type y: float
        """
        if y is None:
            raise ValueError("Invalid value for `y`, must not be `None`")

        self._y = y
