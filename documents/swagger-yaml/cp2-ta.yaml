swagger: '2.0'
info:
  version: '0.1'
  title: 'cmu mars brass ta: phase 2, cp2'
schemes:
  - http
host: brass-ta
definitions:
  Adaptation:
    type: string
    description: >-
      placeholder for actual definition of adaptations

  SourceLine:
    type: object
    required:
      - file
      - number
    properties:
      file:
        type: string
        description: >-
          The file to which this line belongs.
      number:
        type: integer
        minimum: 1
        description: >-
          The one-indexed number of this line in the file.

  SourceLocation:
    type: object
    required:
      - file
      - offset
    properties:
      file:
        type: string
        description: >-
          The file at which this source location resides.
      offset:
        type: integer
        minimum: 0
        description: >-
          The character offset between the start of the file and this location.

  SourceRange:
    type: object
    required:
      - start
      - stop
    properties:
      start:
        $ref: '#/definitions/SourceLocation'
        description: >-
          The location that marks the start of this source range.
      stop:
        $ref: '#/definitions/SourceLocation'
        description: >-
          The location that marks the end of this source range.

  Perturbation:
    type: object
    discriminator: kind
    required:
      - kind
    properties:
      kind:
        type: string
        description: >-
          Used to discriminate between different kinds of perturbation.

  DeleteStatementPerturbation:
    type: object
    allOf:
      - $ref: '#/definitions/Perturbation'
      - required:
          - kind
          - locationRange
      - properties:
          locationRange:
            $ref: '#/definitions/SourceRange'
            description: >-
              The range of code that is deleted by the perturbation.

  ReplaceStatementPerturbation:
    type: object
    allOf:
      - $ref: '#/definitions/Perturbation'
      - required:
          - kind
          - locationRange
      - properties:
          locationRange:
            $ref: '#/definitions/SourceRange'
            description: >-
              The range of code that is replaced by the perturbation.
          statement:
            type: string
            description:
              The source code for the replacement statement.

  InsertStatementPerturbation:
    type: object
    allOf:
      - $ref: '#/definitions/Perturbation'
      - required:
          - kind
          - location
          - statement
      - properties:
          location:
            $ref: '#/definitions/SourceRange'
            description: >-
              The location immediately before the location at which the
              statement will be inserted.
          statement:
            type: string
            description:
              The source code for the inserted statement.

paths:
  /perturbations:
    get:
      description: >-
        Returns a list of possible perturbations of an (optionally) specified
        shape and complexity that can be performed at a given line in the
        program. This endpoint should be used to select a
        suitable (set of) perturbation(s) for a test scenario.
      parameters:
        - in: body
          required: true
          name: Parameters
          schema:
            type: object
            required:
              - file
              - shape
            properties:
              file:
                type: string
                description: >-
                  The file at which the perturbation should be injected.
              shape:
                type: string
                enum:
                  - DeleteStatement
                  - ReplaceStatement
                  - InsertStatement
                description: >-
                  The shape of the fault (e.g., incorrect conditional,
                  missing control flow).
              line:
                type: integer
                description: >-
                  The number of the line at which the perturbation should be
                  injected. N.b. if this parameter is used, then the file
                  parameter must also be specified.
      responses:
        '200':
          description: Successfully computed the list of possible perturbations
          schema:
            type: object
            properties:
              perturbations:
                type: array
                items:
                  $ref: '#/definitions/Perturbation'
                description: >-
                  A list of perturbations that satisfy the query parameters
                  provided by the request.
        '400':
          description: >-
            Encountered an error while computing the list of possible
            perturbations.
          schema:
            type: object
            properties:
              message:
                type: string
                description: >-
                  Human-readable information about the error, if any can be
                  provided

  /lines:
    get:
      description: Returns a list of all the source lines at which
        perturbations may be injected.
      responses:
        '200':
          description: Successfully computed and returned a list of source
            lines within the project.
          schema:
            type: array
            items:
              $ref: '#/definitions/SourceLine'
            description: >-
              A list of the (mutable) source lines within the project.
        '400':
          description: Failed to produce a list of source lines within the
            project.

  /adapt:
    post:
      description: Used to trigger the code adaptation process.
      parameters:
        - in: body
          required: true
          name: Parameters
          schema:
            type: object
            properties:
              time-limit:
                type: number
                format: float
                minimum: 1.0
                required: false
                description: >-
                  An (optional) time limit for the adaptation process,
                  specified in minutes.
              attempt-limit:
                type: integer
                minimum: 1
                required: false
                description: >-
                  An (optional) limit on the number of adaptations that may be
                  attempted.
      responses:
        '200':
          description: Successfully triggered code adaptation
        '400':
          description: Encountered an error while triggering code adaptation
          schema:
            type: object
            properties:
              message:
                type: string
                description: >-
                  Human-readable information about the error, if any can be
                  provided
  /perturb:
    post:
      description: >-
        Applies a set of perturbations, given as a list of JSON objects,
        to the SUT. This endpoint should be used to prepare a test scenario
        for evaluation.
      parameters:
        - in: body
          required: true
          name: Parameters
          schema:
            type: object
            required:
              - perturbations
            properties:
              perturbations:
                type: array
                description: A non-empty list of perturbations to apply to the
                  codebase
                items:
                  $ref: '#/definitions/Perturbation'
      responses:
        '200':
          description: Applied the perturbations to the the system successfully
        '400':
          description: Encountered an error while applying the perturbations to the system
          schema:
            type: object
            properties:
              message:
                type: string
                description: >-
                  Human-readable information about the error, if any can be
                  provided
  /observe:
    get:
      description: >-
        Returns the current status of the SUT.

      responses:
        '200':
          description: Successfully observed the state of the SUT.
          schema:
            type: object
            required:
              - stage
            properties:
              stage:
                type: string
                description: >-
                  A concise description of the current state of the system.
                enum:
                  - awaiting-perturbation
                  - injecting-perturbation
                  - localising-perturbation
                  - searching-for-adaptation
                  - finished-adapting
              resource-consumption:
                type: object
                description: >-
                  A description of the resources that have been consumed in
                  the process of searching for an adaptation.
                required:
                  - num-attempts
                properties:
                  num-attempts:
                    type: integer
                    minimum: 0
                    description: Number of attempted adaptations.
                  time-spent:
                    type: number
                    format: float
                    minimum: 0.0
                    description: Wall-clock time spent searching for an adaptation.
              pareto-set:
                type: array
                items:
                  $ref: '#/definitions/Adaptation'
                description: >-
                  A list containing details of the sub-set of adaptations that
                  have been encountered that belong to the
                  pareto set (i.e., the set of non-dominated adaptations).

        '400':
          description: Encounted an error while observing the SUT.
